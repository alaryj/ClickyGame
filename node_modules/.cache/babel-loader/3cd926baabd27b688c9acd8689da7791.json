{"ast":null,"code":"import _toConsumableArray from \"/Users/Jamie/Desktop/School/ClickyGame/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/Jamie/Desktop/School/ClickyGame/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _classCallCheck from \"/Users/Jamie/Desktop/School/ClickyGame/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/Jamie/Desktop/School/ClickyGame/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/Jamie/Desktop/School/ClickyGame/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/Jamie/Desktop/School/ClickyGame/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/Jamie/Desktop/School/ClickyGame/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/Jamie/Desktop/School/ClickyGame/src/App.js\";\nimport React, { Component } from 'react';\nimport Navbar from './components/Navbar/Navbar.js';\nimport Modal from './components/Modal/Modal.js';\nimport ClickCard from './components/ClickCard/ClickCard.js';\nimport Footer from './components/Footer/Footer.js';\nimport cards from './cards.json';\nimport './index.css';\n\nvar App =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(App, _Component);\n\n  function App() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, App);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(App)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      cards: cards,\n      score: 0,\n      topScore: 0,\n      clickedCards: [],\n      footerText: \"\"\n    };\n\n    _this.clickedCharacter = function (id) {\n      var _document$getElements = document.getElementsByTagName('body'),\n          _document$getElements2 = _slicedToArray(_document$getElements, 1),\n          pageBody = _document$getElements2[0];\n\n      if (_this.state.clickedCards.includes(id)) {\n        _this.setState({\n          score: 0,\n          clickedCards: []\n        });\n\n        pageBody.classList.add('shakeWrapper');\n\n        _this.setState({\n          footerText: 'You picked that already! Start Over.'\n        });\n\n        setTimeout(function () {\n          pageBody.classList.remove('shakeWrapper');\n        }, 500);\n        setTimeout(function () {\n          _this.setState({\n            footerText: \"\"\n          });\n        }, 3000);\n      } else {\n        _this.setState({\n          clickedCards: _toConsumableArray(_this.state.clickedCards).concat([id])\n        });\n\n        _this.setState({\n          score: _this.state.score + 1\n        });\n\n        if (_this.state.score >= _this.state.topScore) {\n          _this.setState({\n            topScore: _this.state.score + 1\n          });\n        }\n\n        if (_this.state.score === 11) {\n          _this.setState({\n            footerText: 'You Won! Play again?'\n          });\n\n          _this.setState({\n            score: 0,\n            clickedCards: [],\n            cards: cards\n          });\n\n          setTimeout(function () {\n            _this.setState({\n              footerText: ''\n            });\n          }, 1800);\n        }\n      }\n    };\n\n    _this.reArrangeCards = function (array) {\n      var currentIndex = array.length;\n\n      while (0 !== currentIndex) {\n        var randomIndex = Math.floor(Math.random() * currentIndex);\n        currentIndex -= 1;\n        var temporaryValue = array[currentIndex];\n        array[currentIndex] = array[randomIndex];\n        array[randomIndex] = temporaryValue;\n      }\n\n      _this.setState({\n        cards: cards\n      });\n    };\n\n    _this.renderCards = function (array) {\n      return _this.state.cards.map(function (card) {\n        return React.createElement(\"section\", {\n          className: \"col s4 m3 l3\",\n          key: card.id,\n          id: card.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, React.createElement(ClickCard, {\n          name: card.name,\n          image: card.image,\n          reArrangeCards: function reArrangeCards() {\n            _this.reArrangeCards(_this.state.cards);\n          },\n          clickedCharacter: function clickedCharacter() {\n            _this.clickedCharacter(card.id);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }));\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"container-fluid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, React.createElement(Navbar, {\n        score: this.state.score,\n        topScore: this.state.topScore,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }), React.createElement(Modal, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"container row cardWrapper\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, this.renderCards(this.state.cards)), React.createElement(Footer, {\n        text: this.state.footerText,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport default App;","map":{"version":3,"sources":["/Users/Jamie/Desktop/School/ClickyGame/src/App.js"],"names":["React","Component","Navbar","Modal","ClickCard","Footer","cards","App","state","score","topScore","clickedCards","footerText","clickedCharacter","id","document","getElementsByTagName","pageBody","includes","setState","classList","add","setTimeout","remove","reArrangeCards","array","currentIndex","length","randomIndex","Math","floor","random","temporaryValue","renderCards","map","card","name","image"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Navbar from './components/Navbar/Navbar.js';\nimport Modal from './components/Modal/Modal.js';\nimport ClickCard from './components/ClickCard/ClickCard.js';\nimport Footer from './components/Footer/Footer.js';\nimport cards from './cards.json';\n\nimport './index.css';\n\nclass App extends Component {\n  state = {\n      cards: cards,\n      score: 0,\n      topScore: 0,\n      clickedCards: [],\n      footerText: \"\"\n    }\n\n  clickedCharacter = (id) => {\n    const [pageBody] = document.getElementsByTagName('body');\n\n    if (this.state.clickedCards.includes(id)) {\n      this.setState({score: 0, clickedCards: []})\n\n      pageBody.classList.add('shakeWrapper')\n      this.setState({footerText: 'You picked that already! Start Over.'})\n      setTimeout(() => {\n        pageBody.classList.remove('shakeWrapper');\n      }, 500);\n      setTimeout(() => {\n        this.setState({footerText: \"\"})\n      }, 3000)\n\n    } else {\n      this.setState({clickedCards: [...this.state.clickedCards, id]})\n      this.setState({score: this.state.score + 1})\n      if (this.state.score >= this.state.topScore) {\n        this.setState({topScore: this.state.score + 1})\n\n      } \n      if (this.state.score === 11) {\n        this.setState({footerText: 'You Won! Play again?'})\n        this.setState({score: 0, clickedCards: [], cards: cards})\n        setTimeout(() => {\n          this.setState({footerText: ''})\n        }, 1800)\n      } \n    }\n  }\n\n  reArrangeCards = (array) => {\n    let currentIndex = array.length;\n\n    while (0 !== currentIndex) {\n      let randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n      let temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    this.setState({cards:cards});\n  }\n\n  renderCards = (array) => {\n    return this.state.cards.map(card => (\n      <section className='col s4 m3 l3' key={card.id} id={card.id}>\n        <ClickCard\n          name={card.name} \n          image={card.image} \n          reArrangeCards={() => {this.reArrangeCards(this.state.cards)}}\n          clickedCharacter={() => {this.clickedCharacter(card.id)}}/>\n      </section>\n      )\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"container-fluid\">\n        <Navbar score={this.state.score} topScore={this.state.topScore}/>\n        <Modal />\n        <br />\n        <div className=\"container row cardWrapper\">\n          {this.renderCards(this.state.cards)}\n        </div>\n        <Footer text={this.state.footerText}/>\n      </div>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}